{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ethers } from 'ethers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContractABI = require(\"../build/contracts/TicketToken.json\");\nvar contractABI = ContractABI.abi;\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMetaMaskInstalled = _useState2[0],\n    setIsMetaMaskInstalled = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isConnected = _useState4[0],\n    setIsConnected = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    readTicketID = _useState6[0],\n    setReadTicketID = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    redeemTicket_ = _useState8[0],\n    setRedeemTicket = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    refundUnusedTicket_ = _useState10[0],\n    setRrefundUnusedTicket = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    ticketPrice = _useState12[0],\n    setTicketPrice = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    texto = _useState14[0],\n    setTexto = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    tickets = _useState16[0],\n    setTickets = _useState16[1];\n  var handleInputChange = function handleInputChange(valor) {\n    setTexto(valor);\n  };\n  var handleRefundUnusedTicket = function handleRefundUnusedTicket() {\n    setRrefundUnusedTicket(true);\n    setReadTicketID(true);\n  };\n  var handleRedeemTicket = function handleRedeemTicket() {\n    setRedeemTicket(true);\n    setReadTicketID(true);\n  };\n  var handleEnviar = function handleEnviar() {\n    setReadTicketID(false);\n    setTexto('');\n    if (redeemTicket_) {\n      redeemTicket(texto);\n    } else if (refundUnusedTicket_) {\n      refundUnusedTicket(texto);\n    }\n  };\n  var contractAddress = '0xeEfB74577aB224585e45e61333f3545D9233C30f';\n  function showTickets() {\n    return _showTickets.apply(this, arguments);\n  }\n  function _showTickets() {\n    _showTickets = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, 'any');\n        var contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n        var signer = yield metamaskProvider.getSigner();\n        var signerAddress = (yield signer).getAddress();\n        var signerAddressStr = (yield signerAddress).parg();\n        var blockInterval = 100;\n        var fromBlock = 10187728;\n        var toBlock = yield metamaskProvider.getBlockNumber();\n        var fromBlockAtual = fromBlock;\n        var toBlockAtual = fromBlockAtual + blockInterval;\n        var fetchedTickets = [];\n        while (fromBlockAtual <= toBlock) {\n          var TicketIssuedEvents = yield contract.queryFilter(contract.filters.TicketIssued(), fromBlockAtual, toBlockAtual);\n          for (var event of TicketIssuedEvents) {\n            var ticketId = event.args.ticketId;\n            var to = event.args.to;\n            if (to === signerAddressStr) {\n              fetchedTickets.push({\n                ticketId: ticketId,\n                to: to\n              });\n              console.log(\"ID do Ingresso:\", ticketId);\n              console.log(\"Destinatário:\", to);\n              console.log(\"\\n\");\n            }\n          }\n          fromBlockAtual += blockInterval;\n          toBlockAtual += blockInterval;\n        }\n        setTickets(fetchedTickets);\n      } catch (error) {\n        console.error('Erro ao buscar e ler eventos:', error);\n      }\n    });\n    return _showTickets.apply(this, arguments);\n  }\n  function checkMetaMaskInstalled() {\n    return _checkMetaMaskInstalled.apply(this, arguments);\n  }\n  function _checkMetaMaskInstalled() {\n    _checkMetaMaskInstalled = _asyncToGenerator(function* () {\n      if (window.ethereum) {\n        return true;\n      } else {\n        console.error('MetaMask não está instalado.');\n        return false;\n      }\n    });\n    return _checkMetaMaskInstalled.apply(this, arguments);\n  }\n  function connect() {\n    return _connect.apply(this, arguments);\n  }\n  function _connect() {\n    _connect = _asyncToGenerator(function* () {\n      try {\n        if (window.ethereum) {\n          yield window.ethereum.enable();\n          var provider = new ethers.BrowserProvider(window.ethereum, \"any\");\n          var signer = provider.getSigner();\n          var contract = new ethers.Contract(contractAddress, contractABI, provider);\n          var accounts = yield provider.listAccounts();\n          provider.on(\"network\", function (newNetwork, oldNetwork) {\n            if (oldNetwork) window.location.reload();\n          });\n          setIsConnected(true);\n          var ticketPriceBigInt = yield getTicketPrice();\n          var formattedTicketPrice = ethers.formatUnits(ticketPriceBigInt, 'ether');\n          setTicketPrice(formattedTicketPrice);\n        } else {\n          console.error('MetaMask não está instalado.');\n          setIsConnected(false);\n        }\n      } catch (error) {\n        console.error('Erro ao acessar contas do MetaMask:', error.message);\n        setIsConnected(false);\n      }\n    });\n    return _connect.apply(this, arguments);\n  }\n  function getTicketPrice() {\n    return _getTicketPrice.apply(this, arguments);\n  }\n  function _getTicketPrice() {\n    _getTicketPrice = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n        var price = yield contract.ticketPrice();\n        return price;\n      } catch (error) {\n        alert('Erro ao consultar o preço do ingresso. Tente recarregar a página.');\n      }\n    });\n    return _getTicketPrice.apply(this, arguments);\n  }\n  function refundUnusedTicket(_x) {\n    return _refundUnusedTicket.apply(this, arguments);\n  }\n  function _refundUnusedTicket() {\n    _refundUnusedTicket = _asyncToGenerator(function* (ticketID) {\n      setRrefundUnusedTicket(false);\n      try {\n        var ticketIDInt = +ticketID;\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var tx = yield contract.refundUnusedTicket(ticketIDInt);\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n        }\n      } catch (error) {\n        if (error.message.indexOf(\"This ticket has already been redeemed\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n          console.log(error.message);\n        } else if (error.message.indexOf(\"You are not the owner of this ticket\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você não é o dono desse ingresso = (');\n          console.log(error.message);\n        } else if (error.message.indexOf(\"Event date has not passed yet\") != -1) {\n          alert('Erro ao enviar a transação: O reembolso só pode ser solicitado após a data do evento = )');\n          console.log(error.message);\n        } else {\n          alert('Falha ao enviar transação X (');\n        }\n      }\n    });\n    return _refundUnusedTicket.apply(this, arguments);\n  }\n  function redeemTicket(_x2) {\n    return _redeemTicket.apply(this, arguments);\n  }\n  function _redeemTicket() {\n    _redeemTicket = _asyncToGenerator(function* (ticketID) {\n      setRedeemTicket(false);\n      try {\n        var ticketIDInt = +ticketID;\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var tx = yield contract.redeemTicket(ticketIDInt);\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n        }\n      } catch (error) {\n        if (error.message.indexOf(\"This ticket has already been redeemed\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n          console.log(error.message);\n        } else if (error.message.indexOf(\"All tickets have been issued\") != -1) {\n          alert('Parece que os ingressos se esgotaram = (');\n          console.log(error.message);\n        } else {\n          alert('Falha ao enviar transação X (');\n        }\n      }\n    });\n    return _redeemTicket.apply(this, arguments);\n  }\n  function purchaseTicket() {\n    return _purchaseTicket.apply(this, arguments);\n  }\n  function _purchaseTicket() {\n    _purchaseTicket = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var ticketPriceBigInt = yield getTicketPrice();\n        var tx = yield contract.purchaseTicket({\n          from: signerAddress,\n          value: ticketPriceBigInt\n        });\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi adquirido com sucesso!\");\n        }\n      } catch (error) {\n        if (error.message.indexOf(\"insufficient funds\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n          console.log(error.message);\n        } else {\n          alert('Falha ao enviar transação X (');\n        }\n      }\n    });\n    return _purchaseTicket.apply(this, arguments);\n  }\n  useEffect(function () {\n    function checkMetaMask() {\n      return _checkMetaMask.apply(this, arguments);\n    }\n    function _checkMetaMask() {\n      _checkMetaMask = _asyncToGenerator(function* () {\n        try {\n          var installed = yield checkMetaMaskInstalled();\n          setIsMetaMaskInstalled(installed);\n        } catch (error) {\n          console.error('Erro ao verificar o MetaMask:', error.message);\n        }\n      });\n      return _checkMetaMask.apply(this, arguments);\n    }\n    checkMetaMask();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [isMetaMaskInstalled && !isConnected && _jsxs(View, {\n      style: styles.metaMaskView,\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Seja Bem-Vindo!\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Conecte-se para continuar.\"\n      }), _jsx(Button, {\n        onPress: connect,\n        title: \"Conectar\",\n        color: \"#8da8ff\"\n      })]\n    }), !isMetaMaskInstalled && _jsxs(View, {\n      style: styles.metaMaskView,\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \":(\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Parece que voc\\xEA n\\xE3o possui a Metamask instalada...\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Instale para continuar!\"\n      })]\n    }), isConnected && !readTicketID && _jsx(View, {\n      style: styles.metaMaskText,\n      children: _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"O que deseja fazer?\"\n      })\n    }), isConnected && !readTicketID && _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Button, {\n        onPress: purchaseTicket,\n        title: \"Comprar Ingresso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: handleRedeemTicket,\n        title: \"Resgatar Ingresso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: handleRefundUnusedTicket,\n        title: \"Obter Reembolso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: showTickets,\n        title: \"Ver Meus Ingressos\",\n        color: \"#8da8ff\"\n      })]\n    }), isConnected && readTicketID && _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Digite o ID do ingresso\",\n        value: texto,\n        onChangeText: handleInputChange,\n        style: {\n          borderBottomWidth: 1,\n          marginBottom: 15,\n          padding: 8,\n          color: '#fff'\n        }\n      }), _jsx(Button, {\n        title: \"Enviar\",\n        onPress: handleEnviar\n      })]\n    }), isConnected && _jsx(View, {\n      style: styles.metaMaskText,\n      children: _jsxs(Text, {\n        style: styles.metaMaskText,\n        children: [\"Pre\\xE7o do ingresso: \", ticketPrice !== null ? `${ticketPrice} ETH` : 'Carregando...']\n      })\n    }), isConnected && readTicketID && _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Digite o ID do ingresso\",\n        value: texto,\n        onChangeText: handleInputChange,\n        style: {\n          borderBottomWidth: 1,\n          marginBottom: 15,\n          padding: 8,\n          color: '#fff'\n        }\n      }), _jsx(Button, {\n        title: \"Enviar\",\n        onPress: handleEnviar\n      })]\n    }), isConnected && _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Ingressos:\"\n      }), _jsx(FlatList, {\n        data: tickets,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsxs(View, {\n            style: styles.ticketItem,\n            children: [_jsxs(Text, {\n              children: [\"ID do Ingresso: \", item.ticketId]\n            }), _jsxs(Text, {\n              children: [\"Destinat\\xE1rio: \", item.to]\n            })]\n          });\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  metaMaskView: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#222',\n    borderRadius: 5\n  },\n  metaMaskText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  horizontalMargin: {\n    marginHorizontal: 10\n  },\n  ticketItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","TextInput","Text","Button","FlatList","ethers","jsx","_jsx","jsxs","_jsxs","ContractABI","require","contractABI","abi","App","_useState","_useState2","_slicedToArray","isMetaMaskInstalled","setIsMetaMaskInstalled","_useState3","_useState4","isConnected","setIsConnected","_useState5","_useState6","readTicketID","setReadTicketID","_useState7","_useState8","redeemTicket_","setRedeemTicket","_useState9","_useState10","refundUnusedTicket_","setRrefundUnusedTicket","_useState11","_useState12","ticketPrice","setTicketPrice","_useState13","_useState14","texto","setTexto","_useState15","_useState16","tickets","setTickets","handleInputChange","valor","handleRefundUnusedTicket","handleRedeemTicket","handleEnviar","redeemTicket","refundUnusedTicket","contractAddress","showTickets","_showTickets","apply","arguments","_asyncToGenerator","metamaskProvider","BrowserProvider","window","ethereum","contract","Contract","signer","getSigner","signerAddress","getAddress","signerAddressStr","parg","blockInterval","fromBlock","toBlock","getBlockNumber","fromBlockAtual","toBlockAtual","fetchedTickets","TicketIssuedEvents","queryFilter","filters","TicketIssued","event","ticketId","args","to","push","console","log","error","checkMetaMaskInstalled","_checkMetaMaskInstalled","connect","_connect","enable","provider","accounts","listAccounts","on","newNetwork","oldNetwork","location","reload","ticketPriceBigInt","getTicketPrice","formattedTicketPrice","formatUnits","message","_getTicketPrice","price","alert","_x","_refundUnusedTicket","ticketID","ticketIDInt","tx","receipt","wait","status","indexOf","_x2","_redeemTicket","purchaseTicket","_purchaseTicket","from","value","checkMetaMask","_checkMetaMask","installed","style","styles","container","children","metaMaskView","metaMaskText","onPress","title","color","row","horizontalMargin","placeholder","onChangeText","borderBottomWidth","marginBottom","padding","data","keyExtractor","item","index","toString","renderItem","_ref","ticketItem","create","flex","backgroundColor","alignItems","justifyContent","marginTop","borderRadius","textAlign","fontWeight","flexDirection","marginVertical","marginHorizontal","borderBottomColor"],"sources":["/home/gabriel/SistDist/interface/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TextInput, Text, Button, FlatList } from 'react-native';\nimport { ethers } from 'ethers';\nconst ContractABI = require('../build/contracts/TicketToken.json');\nconst contractABI = ContractABI.abi;\n\nexport default function App() {\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [readTicketID, setReadTicketID] = useState(false);\n  const [redeemTicket_, setRedeemTicket] = useState(false);\n  const [refundUnusedTicket_, setRrefundUnusedTicket] = useState(false);\n  const [ticketPrice, setTicketPrice] = useState(null);\n  const [texto, setTexto] = useState('');\n  const [tickets, setTickets] = useState([]);\n\n  const handleInputChange = (valor) => {\n    setTexto(valor);\n  };\n\n  const handleRefundUnusedTicket = () => {\n    setRrefundUnusedTicket(true);\n    setReadTicketID(true);\n  };\n\n  const handleRedeemTicket = () => {\n    setRedeemTicket(true);\n    setReadTicketID(true);\n  };\n\n  const handleEnviar = () => {\n    setReadTicketID(false);\n    setTexto('');\n    if (redeemTicket_) {\n      redeemTicket(texto);\n    } else if (refundUnusedTicket_) {\n      refundUnusedTicket(texto);\n    }\n  };\n\n  const contractAddress = '0xeEfB74577aB224585e45e61333f3545D9233C30f';\n\n  async function showTickets() {\n    try {\n      const metamaskProvider = new ethers.BrowserProvider(window.ethereum, 'any');\n      const contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n      const signer = await metamaskProvider.getSigner();\n      const signerAddress = (await signer).getAddress();\n      const signerAddressStr = (await signerAddress).parg();\n\n      const blockInterval = 100;\n      const fromBlock = 10187728;\n      const toBlock = await metamaskProvider.getBlockNumber();\n\n      let fromBlockAtual = fromBlock;\n      let toBlockAtual = fromBlockAtual + blockInterval;\n\n      const fetchedTickets = [];\n\n      while (fromBlockAtual <= toBlock) {\n        const TicketIssuedEvents = await contract.queryFilter(\n          contract.filters.TicketIssued(),\n          fromBlockAtual,\n          toBlockAtual\n        );\n\n        for (const event of TicketIssuedEvents) {\n          const ticketId = event.args.ticketId;\n          const to = event.args.to;\n\n          if (to === signerAddressStr) {\n            fetchedTickets.push({ ticketId, to });\n            console.log(\"ID do Ingresso:\", ticketId);\n            console.log(\"Destinatário:\", to);\n            console.log(\"\\n\");\n            \n          }\n        }\n\n        fromBlockAtual += blockInterval;\n        toBlockAtual += blockInterval;\n      }\n\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Erro ao buscar e ler eventos:', error);\n    }\n  }\n  async function checkMetaMaskInstalled() {\n\n    // Verifica se a extensão ethereum está presente no window\n    if (window.ethereum) {\n\n     return true;\n\n    } else {\n\n      console.error('MetaMask não está instalado.');\n      return false;\n\n    }\n\n  }\n\n  async function connect() {\n    try {\n      // Verifica se o MetaMask está presente\n      if (window.ethereum) {\n        await window.ethereum.enable(); // Solicita permissão ao usuário para conectar o MetaMask\n  \n        // Cria um Signer a partir do MetaMask\n        const provider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        \n        //cria uma instância do contrato\n        const contract = new ethers.Contract(contractAddress, contractABI, provider);\n\n        // Tenta obter as contas do MetaMask\n        const accounts = await provider.listAccounts();\n  \n        // Recarrega a aplicação no caso em que o usuário troca de rede \n        provider.on(\"network\", (newNetwork, oldNetwork) => {\n          if (oldNetwork) window.location.reload();\n        });\n  \n        setIsConnected(true);\n\n        const ticketPriceBigInt = await getTicketPrice();\n        const formattedTicketPrice = ethers.formatUnits(ticketPriceBigInt, 'ether');\n        setTicketPrice(formattedTicketPrice); \n\n      } else {\n        console.error('MetaMask não está instalado.');\n        setIsConnected(false);\n      }\n    } catch (error) {\n      // Se o MetaMask não estiver instalado ou se o usuário não der permissão, será lançado um erro\n      console.error('Erro ao acessar contas do MetaMask:', error.message);\n      setIsConnected(false);\n    }\n  }\n\nasync function getTicketPrice() {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    //const signer = await metamaskProvider.getSigner();\n    \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n\n    // Obtém o valor da variável pública \"ticketPrice\"\n    const price = await contract.ticketPrice();\n\n    return price;\n\n  } catch (error) {\n\n    alert('Erro ao consultar o preço do ingresso. Tente recarregar a página.');\n\n  }\n\n}\n\nasync function refundUnusedTicket(ticketID) {\n\n  setRrefundUnusedTicket(false);\n\n  try {\n\n    const ticketIDInt = +ticketID;\n\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n  \n    const tx = await contract.refundUnusedTicket(ticketIDInt);\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.indexOf(\"This ticket has already been redeemed\") != -1 ){\n\n      alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n      console.log(error.message);\n\n    }else if(error.message.indexOf(\"You are not the owner of this ticket\") != -1){\n\n      alert('Erro ao enviar a transação: Parece que você não é o dono desse ingresso = (');\n      console.log(error.message);\n\n    }else if(error.message.indexOf(\"Event date has not passed yet\") != -1){\n\n      alert('Erro ao enviar a transação: O reembolso só pode ser solicitado após a data do evento = )');\n      console.log(error.message);\n\n    }else{\n\n      alert('Falha ao enviar transação X (');\n\n    }\n\n  }\n}\n/*\nasync function showTickets() {\n\n  try {\n\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n    const signer = await metamaskProvider.getSigner();\n    const signerAddress = (await signer).getAddress();\n    const signerAddressStr = (await signerAddress).toString();\n    \n    //consultar blocos em intervalos de 100 blocos\n    const blockInterval = 100; \n    const fromBlock = 10187728;  // Substitua pelo bloco inicial desejado\n    const toBlock = await metamaskProvider.getBlockNumber();;\n\n    let fromBlockAtual = fromBlock;\n    let toBlockAtual = fromBlockAtual+blockInterval;\n\n    while (fromBlockAtual <= toBlock) {\n\n      const TicketIssuedEvents = await contract.queryFilter(contract.filters.TicketIssued(), fromBlockAtual, toBlockAtual);\n\n      for (const event of TicketIssuedEvents) {\n\n        const ticketId = event.args.ticketId;\n        const to = event.args.to;\n\n        if (to === signerAddressStr){\n          console.log(\"ID do Ingresso:\", ticketId);\n          console.log(\"Destinatário:\", to);\n          console.log(\"\\n\");\n        }\n        \n      }\n\n      fromBlockAtual += blockInterval;\n      toBlockAtual += blockInterval;\n    }\n  } catch (error) {\n    console.error('Erro ao buscar e ler eventos:', error);\n  }\n  \n}\n*/\nasync function redeemTicket(ticketID) {\n\n  setRedeemTicket(false);\n\n  try {\n\n    const ticketIDInt = +ticketID;\n\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n  \n    const tx = await contract.redeemTicket(ticketIDInt);\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.indexOf(\"This ticket has already been redeemed\") != -1 ){\n\n      alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n      console.log(error.message);\n\n    }else if(error.message.indexOf(\"All tickets have been issued\") != -1){\n      \n      alert('Parece que os ingressos se esgotaram = (');\n      console.log(error.message);\n\n    }else{\n\n      alert('Falha ao enviar transação X (');\n\n    }\n    \n  }\n\n}\n\nasync function purchaseTicket() {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n\n    const ticketPriceBigInt = await getTicketPrice();\n\n    const tx = await contract.purchaseTicket({from: signerAddress, value: ticketPriceBigInt});\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi adquirido com sucesso!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.indexOf(\"insufficient funds\") != -1 ){\n\n      alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n      console.log(error.message);\n\n    }else{\n\n      alert('Falha ao enviar transação X (');\n\n    }\n    \n  }\n\n}\n  useEffect(() => {\n\n    async function checkMetaMask() {\n\n      try {\n\n        // Chamada da função que verifica o MetaMask\n        const installed = await checkMetaMaskInstalled();\n        \n        // Atualiza o estado com base no resultado da verificação\n        setIsMetaMaskInstalled(installed);\n\n      } catch (error) {\n\n        console.error('Erro ao verificar o MetaMask:', error.message);\n\n      }\n\n    }\n\n    // Chamada da função de verificação ao iniciar o componente\n    checkMetaMask();\n\n  }, []); // O array vazio [] assegura que o efeito só seja executado uma vez, sem depender de variáveis de estado\n\n\n  return (\n\n   <View style={styles.container}>\n\n      {isMetaMaskInstalled && !isConnected &&(\n        <View style={styles.metaMaskView}>\n          <Text style={styles.metaMaskText}>Seja Bem-Vindo!</Text>\n          <Text style={styles.metaMaskText}>Conecte-se para continuar.</Text>\n          <Button\n            onPress={connect}\n            title=\"Conectar\"\n            color=\"#8da8ff\"\n          />\n        </View>\n      )}\n \n      {!isMetaMaskInstalled && (\n        <View style={styles.metaMaskView}>\n          <Text style={styles.metaMaskText}>:(</Text>\n          <Text style={styles.metaMaskText}>Parece que você não possui a Metamask instalada...</Text>\n          <Text style={styles.metaMaskText}>Instale para continuar!</Text>\n        </View>\n      )}\n\n      {isConnected && !readTicketID &&(\n        <View style={styles.metaMaskText}>\n          <Text style={styles.metaMaskText}>O que deseja fazer?</Text>\n        </View>\n      )}\n\n      {isConnected && !readTicketID &&(\n        <View style={styles.row}>\n          <Button\n            onPress={purchaseTicket}\n            title=\"Comprar Ingresso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={handleRedeemTicket}\n            title=\"Resgatar Ingresso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={handleRefundUnusedTicket}\n            title=\"Obter Reembolso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={showTickets}\n            title=\"Ver Meus Ingressos\"\n            color=\"#8da8ff\"\n          />\n        </View>\n      )}\n\n      {isConnected && readTicketID &&( \n        <View>\n          <TextInput\n            placeholder=\"Digite o ID do ingresso\"\n            value={texto}\n            onChangeText={handleInputChange}\n            style={{ borderBottomWidth: 1, marginBottom: 15, padding: 8,  color: '#fff'}}\n          />\n          <Button title=\"Enviar\" onPress={handleEnviar} />\n        </View>\n      )}\n\n      {isConnected &&(\n        <View style={styles.metaMaskText}>\n          <Text style={styles.metaMaskText}>Preço do ingresso: {ticketPrice !== null ? `${ticketPrice} ETH` : 'Carregando...'}</Text>\n        </View>\n      )}\n\n      {isConnected && readTicketID && (\n        <View>\n          <TextInput\n            placeholder=\"Digite o ID do ingresso\"\n            value={texto}\n            onChangeText={handleInputChange}\n            style={{ borderBottomWidth: 1, marginBottom: 15, padding: 8, color: '#fff' }}\n          />\n          <Button title=\"Enviar\" onPress={handleEnviar} />\n        </View>\n      )}\n\n      {isConnected && (\n        <View>\n          <Text style={styles.metaMaskText}>Ingressos:</Text>\n          <FlatList\n            data={tickets}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <View style={styles.ticketItem}>\n                <Text>ID do Ingresso: {item.ticketId}</Text>\n                <Text>Destinatário: {item.to}</Text>\n              </View>\n            )}\n          />\n        </View>\n      )}\n\n    </View>\n  );\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  metaMaskView: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#222',\n    borderRadius: 5,\n  },\n  metaMaskText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginVertical: 10,\n  },\n  horizontalMargin: {\n    marginHorizontal: 10,\n  },\n  ticketItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}