{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ethers } from 'ethers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContractABI = require(\"../build/contracts/TicketToken.json\");\nvar contractABI = ContractABI.abi;\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMetaMaskInstalled = _useState2[0],\n    setIsMetaMaskInstalled = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isConnected = _useState4[0],\n    setIsConnected = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    readTicketID = _useState6[0],\n    setReadTicketID = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    redeemTicket_ = _useState8[0],\n    setRedeemTicket = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    refundUnusedTicket_ = _useState10[0],\n    setRrefundUnusedTicket = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    ticketPrice = _useState12[0],\n    setTicketPrice = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    texto = _useState14[0],\n    setTexto = _useState14[1];\n  var handleInputChange = function handleInputChange(valor) {\n    setTexto(valor);\n  };\n  var handleRefundUnusedTicket = function handleRefundUnusedTicket() {\n    setRrefundUnusedTicket(true);\n    setReadTicketID(true);\n  };\n  var handleRedeemTicket = function handleRedeemTicket() {\n    setRedeemTicket(true);\n    setReadTicketID(true);\n  };\n  var handleEnviar = function handleEnviar() {\n    setReadTicketID(false);\n    setTexto('');\n    if (redeemTicket_) {\n      redeemTicket(texto);\n    } else if (refundUnusedTicket_) {\n      refundUnusedTicket(texto);\n    }\n  };\n  var contractAddress = \"0xeEfB74577aB224585e45e61333f3545D9233C30f\";\n  function checkMetaMaskInstalled() {\n    return _checkMetaMaskInstalled.apply(this, arguments);\n  }\n  function _checkMetaMaskInstalled() {\n    _checkMetaMaskInstalled = _asyncToGenerator(function* () {\n      if (window.ethereum) {\n        return true;\n      } else {\n        console.error('MetaMask não está instalado.');\n        return false;\n      }\n    });\n    return _checkMetaMaskInstalled.apply(this, arguments);\n  }\n  function connect() {\n    return _connect.apply(this, arguments);\n  }\n  function _connect() {\n    _connect = _asyncToGenerator(function* () {\n      try {\n        if (window.ethereum) {\n          yield window.ethereum.enable();\n          var provider = new ethers.BrowserProvider(window.ethereum, \"any\");\n          var signer = provider.getSigner();\n          var contract = new ethers.Contract(contractAddress, contractABI, provider);\n          var accounts = yield provider.listAccounts();\n          provider.on(\"network\", function (newNetwork, oldNetwork) {\n            if (oldNetwork) window.location.reload();\n          });\n          setIsConnected(true);\n          var ticketPriceBigInt = yield getTicketPrice();\n          var formattedTicketPrice = ethers.formatUnits(ticketPriceBigInt, 'ether');\n          setTicketPrice(formattedTicketPrice);\n        } else {\n          console.error('MetaMask não está instalado.');\n          setIsConnected(false);\n        }\n      } catch (error) {\n        console.error('Erro ao acessar contas do MetaMask:', error.message);\n        setIsConnected(false);\n      }\n    });\n    return _connect.apply(this, arguments);\n  }\n  function getTicketPrice() {\n    return _getTicketPrice.apply(this, arguments);\n  }\n  function _getTicketPrice() {\n    _getTicketPrice = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n        var price = yield contract.ticketPrice();\n        return price;\n      } catch (error) {\n        alert('Erro ao consultar o preço do ingresso. Tente recarregar a página.');\n      }\n    });\n    return _getTicketPrice.apply(this, arguments);\n  }\n  function refundUnusedTicket(_x) {\n    return _refundUnusedTicket.apply(this, arguments);\n  }\n  function _refundUnusedTicket() {\n    _refundUnusedTicket = _asyncToGenerator(function* (ticketID) {\n      setRrefundUnusedTicket(false);\n      try {\n        var ticketIDInt = +ticketID;\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var tx = yield contract.refundUnusedTicket(ticketIDInt);\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n        }\n      } catch (error) {\n        if (error.message.indexOf(\"This ticket has already been redeemed\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n          console.log(error.message);\n        } else if (error.message.indexOf(\"You are not the owner of this ticket\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você não é o dono desse ingresso = (');\n          console.log(error.message);\n        } else if (error.message.indexOf(\"Event date has not passed yet\") != -1) {\n          alert('Erro ao enviar a transação: O reembolso só pode ser solicitado após a data do evento = )');\n          console.log(error.message);\n        } else {\n          alert('Falha ao enviar transação X (');\n        }\n      }\n    });\n    return _refundUnusedTicket.apply(this, arguments);\n  }\n  function showTickets() {\n    return _showTickets.apply(this, arguments);\n  }\n  function _showTickets() {\n    _showTickets = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n        var signer = yield metamaskProvider.getSigner();\n        var signerAddress = (yield signer).getAddress();\n        console.log(signerAddress);\n        var blockInterval = 100;\n        var fromBlock = 10187728;\n        var toBlock = yield metamaskProvider.getBlockNumber();\n        ;\n        var fromBlockAtual = fromBlock;\n        var toBlockAtual = fromBlockAtual + blockInterval;\n        while (fromBlockAtual <= toBlock) {\n          var TicketIssuedEvents = yield contract.queryFilter(contract.filters.TicketIssued(), fromBlockAtual, toBlockAtual);\n          for (var event of TicketIssuedEvents) {\n            var ticketId = event.args.ticketId;\n            var to = event.args.to;\n            console.log(\"ID do Ingresso:\", ticketId);\n            console.log(\"Destinatário:\", to);\n            console.log(\"\\n\");\n          }\n          fromBlockAtual += blockInterval;\n          toBlockAtual += blockInterval;\n        }\n      } catch (error) {\n        console.error('Erro ao buscar e ler eventos:', error);\n      }\n    });\n    return _showTickets.apply(this, arguments);\n  }\n  function redeemTicket(_x2) {\n    return _redeemTicket.apply(this, arguments);\n  }\n  function _redeemTicket() {\n    _redeemTicket = _asyncToGenerator(function* (ticketID) {\n      setRedeemTicket(false);\n      try {\n        var ticketIDInt = +ticketID;\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var tx = yield contract.redeemTicket(ticketIDInt);\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n        }\n      } catch (error) {\n        if (error.message.indexOf(\"This ticket has already been redeemed\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n          console.log(error.message);\n        } else if (error.message.indexOf(\"All tickets have been issued\") != -1) {\n          alert('Parece que os ingressos se esgotaram = (');\n          console.log(error.message);\n        } else {\n          alert('Falha ao enviar transação X (');\n        }\n      }\n    });\n    return _redeemTicket.apply(this, arguments);\n  }\n  function purchaseTicket() {\n    return _purchaseTicket.apply(this, arguments);\n  }\n  function _purchaseTicket() {\n    _purchaseTicket = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var ticketPriceBigInt = yield getTicketPrice();\n        var tx = yield contract.purchaseTicket({\n          from: signerAddress,\n          value: ticketPriceBigInt\n        });\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi adquirido com sucesso!\");\n        }\n      } catch (error) {\n        if (error.message.indexOf(\"insufficient funds\") != -1) {\n          alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n          console.log(error.message);\n        } else {\n          alert('Falha ao enviar transação X (');\n        }\n      }\n    });\n    return _purchaseTicket.apply(this, arguments);\n  }\n  useEffect(function () {\n    function checkMetaMask() {\n      return _checkMetaMask.apply(this, arguments);\n    }\n    function _checkMetaMask() {\n      _checkMetaMask = _asyncToGenerator(function* () {\n        try {\n          var installed = yield checkMetaMaskInstalled();\n          setIsMetaMaskInstalled(installed);\n        } catch (error) {\n          console.error('Erro ao verificar o MetaMask:', error.message);\n        }\n      });\n      return _checkMetaMask.apply(this, arguments);\n    }\n    checkMetaMask();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [isMetaMaskInstalled && !isConnected && _jsxs(View, {\n      style: styles.metaMaskView,\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Seja Bem-Vindo!\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Conecte-se para continuar.\"\n      }), _jsx(Button, {\n        onPress: connect,\n        title: \"Conectar\",\n        color: \"#8da8ff\"\n      })]\n    }), !isMetaMaskInstalled && _jsxs(View, {\n      style: styles.metaMaskView,\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \":(\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Parece que voc\\xEA n\\xE3o possui a Metamask instalada...\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Instale para continuar!\"\n      })]\n    }), isConnected && !readTicketID && _jsx(View, {\n      style: styles.metaMaskText,\n      children: _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"O que deseja fazer?\"\n      })\n    }), isConnected && !readTicketID && _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Button, {\n        onPress: purchaseTicket,\n        title: \"Comprar Ingresso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: handleRedeemTicket,\n        title: \"Resgatar Ingresso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: handleRefundUnusedTicket,\n        title: \"Obter Reembolso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: showTickets,\n        title: \"Ver Meus Ingressos\",\n        color: \"#8da8ff\"\n      })]\n    }), isConnected && readTicketID && _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Digite o ID do ingresso\",\n        value: texto,\n        onChangeText: handleInputChange,\n        style: {\n          borderBottomWidth: 1,\n          marginBottom: 15,\n          padding: 8,\n          color: '#fff'\n        }\n      }), _jsx(Button, {\n        title: \"Enviar\",\n        onPress: handleEnviar\n      })]\n    }), isConnected && _jsx(View, {\n      style: styles.metaMaskText,\n      children: _jsxs(Text, {\n        style: styles.metaMaskText,\n        children: [\"Pre\\xE7o do ingresso: \", ticketPrice !== null ? `${ticketPrice} ETH` : 'Carregando...']\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  metaMaskView: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#222',\n    borderRadius: 5\n  },\n  metaMaskText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  horizontalMargin: {\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","TextInput","Text","Button","ethers","jsx","_jsx","jsxs","_jsxs","ContractABI","require","contractABI","abi","App","_useState","_useState2","_slicedToArray","isMetaMaskInstalled","setIsMetaMaskInstalled","_useState3","_useState4","isConnected","setIsConnected","_useState5","_useState6","readTicketID","setReadTicketID","_useState7","_useState8","redeemTicket_","setRedeemTicket","_useState9","_useState10","refundUnusedTicket_","setRrefundUnusedTicket","_useState11","_useState12","ticketPrice","setTicketPrice","_useState13","_useState14","texto","setTexto","handleInputChange","valor","handleRefundUnusedTicket","handleRedeemTicket","handleEnviar","redeemTicket","refundUnusedTicket","contractAddress","checkMetaMaskInstalled","_checkMetaMaskInstalled","apply","arguments","_asyncToGenerator","window","ethereum","console","error","connect","_connect","enable","provider","BrowserProvider","signer","getSigner","contract","Contract","accounts","listAccounts","on","newNetwork","oldNetwork","location","reload","ticketPriceBigInt","getTicketPrice","formattedTicketPrice","formatUnits","message","_getTicketPrice","metamaskProvider","price","alert","_x","_refundUnusedTicket","ticketID","ticketIDInt","signerAddress","getAddress","tx","receipt","wait","status","indexOf","log","showTickets","_showTickets","blockInterval","fromBlock","toBlock","getBlockNumber","fromBlockAtual","toBlockAtual","TicketIssuedEvents","queryFilter","filters","TicketIssued","event","ticketId","args","to","_x2","_redeemTicket","purchaseTicket","_purchaseTicket","from","value","checkMetaMask","_checkMetaMask","installed","style","styles","container","children","metaMaskView","metaMaskText","onPress","title","color","row","horizontalMargin","placeholder","onChangeText","borderBottomWidth","marginBottom","padding","create","flex","backgroundColor","alignItems","justifyContent","marginTop","borderRadius","textAlign","fontWeight","flexDirection","marginVertical","marginHorizontal"],"sources":["/home/gabriel/SistDist/interface/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TextInput, Text, Button } from 'react-native';\nimport { ethers } from 'ethers';\nconst ContractABI = require('../build/contracts/TicketToken.json');\nconst contractABI = ContractABI.abi;\n\nexport default function App() {\n\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [readTicketID, setReadTicketID] = useState(false);\n  const [redeemTicket_, setRedeemTicket] = useState(false);\n  const [refundUnusedTicket_, setRrefundUnusedTicket] = useState(false);\n  const [ticketPrice, setTicketPrice] = useState(null); \n\n  const [texto, setTexto] = useState('');\n\n  const handleInputChange = (valor) => {\n    setTexto(valor);\n  };\n\n  const handleRefundUnusedTicket = () => {\n    setRrefundUnusedTicket(true);\n    setReadTicketID(true);\n  };\n\n  const handleRedeemTicket = () => {\n    setRedeemTicket(true);\n    setReadTicketID(true);\n  };\n\n  const handleEnviar = () => {\n    setReadTicketID(false);\n    setTexto('');\n    if(redeemTicket_){\n      redeemTicket(texto);\n    }else if(refundUnusedTicket_){\n      refundUnusedTicket(texto)\n    }\n    \n  };\n\n  \n  const contractAddress = \"0xeEfB74577aB224585e45e61333f3545D9233C30f\";//colocar o endereço do contrato obtido no deploy\n\n  async function checkMetaMaskInstalled() {\n\n    // Verifica se a extensão ethereum está presente no window\n    if (window.ethereum) {\n\n     return true;\n\n    } else {\n\n      console.error('MetaMask não está instalado.');\n      return false;\n\n    }\n\n  }\n\n  async function connect() {\n    try {\n      // Verifica se o MetaMask está presente\n      if (window.ethereum) {\n        await window.ethereum.enable(); // Solicita permissão ao usuário para conectar o MetaMask\n  \n        // Cria um Signer a partir do MetaMask\n        const provider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        \n        //cria uma instância do contrato\n        const contract = new ethers.Contract(contractAddress, contractABI, provider);\n\n        // Tenta obter as contas do MetaMask\n        const accounts = await provider.listAccounts();\n  \n        // Recarrega a aplicação no caso em que o usuário troca de rede \n        provider.on(\"network\", (newNetwork, oldNetwork) => {\n          if (oldNetwork) window.location.reload();\n        });\n  \n        setIsConnected(true);\n\n        const ticketPriceBigInt = await getTicketPrice();\n        const formattedTicketPrice = ethers.formatUnits(ticketPriceBigInt, 'ether');\n        setTicketPrice(formattedTicketPrice); \n\n      } else {\n        console.error('MetaMask não está instalado.');\n        setIsConnected(false);\n      }\n    } catch (error) {\n      // Se o MetaMask não estiver instalado ou se o usuário não der permissão, será lançado um erro\n      console.error('Erro ao acessar contas do MetaMask:', error.message);\n      setIsConnected(false);\n    }\n  }\n\nasync function getTicketPrice() {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    //const signer = await metamaskProvider.getSigner();\n    \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n\n    // Obtém o valor da variável pública \"ticketPrice\"\n    const price = await contract.ticketPrice();\n\n    return price;\n\n  } catch (error) {\n\n    alert('Erro ao consultar o preço do ingresso. Tente recarregar a página.');\n\n  }\n\n}\n\nasync function refundUnusedTicket(ticketID) {\n\n  setRrefundUnusedTicket(false);\n\n  try {\n\n    const ticketIDInt = +ticketID;\n\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n  \n    const tx = await contract.refundUnusedTicket(ticketIDInt);\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.indexOf(\"This ticket has already been redeemed\") != -1 ){\n\n      alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n      console.log(error.message);\n\n    }else if(error.message.indexOf(\"You are not the owner of this ticket\") != -1){\n\n      alert('Erro ao enviar a transação: Parece que você não é o dono desse ingresso = (');\n      console.log(error.message);\n\n    }else if(error.message.indexOf(\"Event date has not passed yet\") != -1){\n\n      alert('Erro ao enviar a transação: O reembolso só pode ser solicitado após a data do evento = )');\n      console.log(error.message);\n\n    }else{\n\n      alert('Falha ao enviar transação X (');\n\n    }\n\n  }\n}\n\nasync function showTickets() {\n\n  try {\n\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n    const signer = await metamaskProvider.getSigner();\n    const signerAddress = (await signer).getAddress();\n    console.log(signerAddress);\n    \n    //consultar blocos em intervalos de 100 blocos\n    const blockInterval = 100; \n    const fromBlock = 10187728;  // Substitua pelo bloco inicial desejado\n    const toBlock = await metamaskProvider.getBlockNumber();;\n\n    let fromBlockAtual = fromBlock;\n    let toBlockAtual = fromBlockAtual+blockInterval;\n\n    while (fromBlockAtual <= toBlock) {\n\n      const TicketIssuedEvents = await contract.queryFilter(contract.filters.TicketIssued(), fromBlockAtual, toBlockAtual);\n\n      for (const event of TicketIssuedEvents) {\n\n        const ticketId = event.args.ticketId;\n        const to = event.args.to;\n\n        //if (to === signerAddress){\n          /**\n           * \n           * Dar um jeito de exibir bonitinho\n           * \n           */\n          console.log(\"ID do Ingresso:\", ticketId);\n          console.log(\"Destinatário:\", to);\n          console.log(\"\\n\");\n        //}\n        \n      }\n\n      fromBlockAtual += blockInterval;\n      toBlockAtual += blockInterval;\n    }\n  } catch (error) {\n    console.error('Erro ao buscar e ler eventos:', error);\n  }\n  \n}\n\nasync function redeemTicket(ticketID) {\n\n  setRedeemTicket(false);\n\n  try {\n\n    const ticketIDInt = +ticketID;\n\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n  \n    const tx = await contract.redeemTicket(ticketIDInt);\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.indexOf(\"This ticket has already been redeemed\") != -1 ){\n\n      alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n      console.log(error.message);\n\n    }else if(error.message.indexOf(\"All tickets have been issued\") != -1){\n      \n      alert('Parece que os ingressos se esgotaram = (');\n      console.log(error.message);\n\n    }else{\n\n      alert('Falha ao enviar transação X (');\n\n    }\n    \n  }\n\n}\n\nasync function purchaseTicket() {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n\n    const ticketPriceBigInt = await getTicketPrice();\n\n    const tx = await contract.purchaseTicket({from: signerAddress, value: ticketPriceBigInt});\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi adquirido com sucesso!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.indexOf(\"insufficient funds\") != -1 ){\n\n      alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n      console.log(error.message);\n\n    }else{\n\n      alert('Falha ao enviar transação X (');\n\n    }\n    \n  }\n\n}\n  useEffect(() => {\n\n    async function checkMetaMask() {\n\n      try {\n\n        // Chamada da função que verifica o MetaMask\n        const installed = await checkMetaMaskInstalled();\n        \n        // Atualiza o estado com base no resultado da verificação\n        setIsMetaMaskInstalled(installed);\n\n      } catch (error) {\n\n        console.error('Erro ao verificar o MetaMask:', error.message);\n\n      }\n\n    }\n\n    // Chamada da função de verificação ao iniciar o componente\n    checkMetaMask();\n\n  }, []); // O array vazio [] assegura que o efeito só seja executado uma vez, sem depender de variáveis de estado\n\n\n  return (\n\n   <View style={styles.container}>\n\n      {isMetaMaskInstalled && !isConnected &&(\n        <View style={styles.metaMaskView}>\n          <Text style={styles.metaMaskText}>Seja Bem-Vindo!</Text>\n          <Text style={styles.metaMaskText}>Conecte-se para continuar.</Text>\n          <Button\n            onPress={connect}\n            title=\"Conectar\"\n            color=\"#8da8ff\"\n          />\n        </View>\n      )}\n \n      {!isMetaMaskInstalled && (\n        <View style={styles.metaMaskView}>\n          <Text style={styles.metaMaskText}>:(</Text>\n          <Text style={styles.metaMaskText}>Parece que você não possui a Metamask instalada...</Text>\n          <Text style={styles.metaMaskText}>Instale para continuar!</Text>\n        </View>\n      )}\n\n      {isConnected && !readTicketID &&(\n        <View style={styles.metaMaskText}>\n          <Text style={styles.metaMaskText}>O que deseja fazer?</Text>\n        </View>\n      )}\n\n      {isConnected && !readTicketID &&(\n        <View style={styles.row}>\n          <Button\n            onPress={purchaseTicket}\n            title=\"Comprar Ingresso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={handleRedeemTicket}\n            title=\"Resgatar Ingresso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={handleRefundUnusedTicket}\n            title=\"Obter Reembolso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={showTickets}\n            title=\"Ver Meus Ingressos\"\n            color=\"#8da8ff\"\n          />\n        </View>\n      )}\n\n      {isConnected && readTicketID &&( \n        <View>\n          <TextInput\n            placeholder=\"Digite o ID do ingresso\"\n            value={texto}\n            onChangeText={handleInputChange}\n            style={{ borderBottomWidth: 1, marginBottom: 15, padding: 8,  color: '#fff'}}\n          />\n          <Button title=\"Enviar\" onPress={handleEnviar} />\n        </View>\n      )}\n\n      {isConnected &&(\n        <View style={styles.metaMaskText}>\n          <Text style={styles.metaMaskText}>Preço do ingresso: {ticketPrice !== null ? `${ticketPrice} ETH` : 'Carregando...'}</Text>\n        </View>\n      )}\n\n    </View>\n  );\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  metaMaskView: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#222',\n    borderRadius: 5,\n  },\n  metaMaskText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginVertical: 10,\n  },\n  horizontalMargin: {\n    marginHorizontal: 10,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}