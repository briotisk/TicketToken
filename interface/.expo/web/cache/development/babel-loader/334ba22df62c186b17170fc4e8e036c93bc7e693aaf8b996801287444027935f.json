{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ethers } from 'ethers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContractABI = require(\"../build/contracts/TicketToken.json\");\nvar contractABI = ContractABI.abi;\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMetaMaskInstalled = _useState2[0],\n    setIsMetaMaskInstalled = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isConnected = _useState4[0],\n    setIsConnected = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isOwner = _useState6[0],\n    setIsOwner = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    readTicketID = _useState8[0],\n    setReadTicketID = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ticketPrice = _useState10[0],\n    setTicketPrice = _useState10[1];\n  var contractAddress = \"0xeEfB74577aB224585e45e61333f3545D9233C30f\";\n  function checkMetaMaskInstalled() {\n    return _checkMetaMaskInstalled.apply(this, arguments);\n  }\n  function _checkMetaMaskInstalled() {\n    _checkMetaMaskInstalled = _asyncToGenerator(function* () {\n      if (window.ethereum) {\n        return true;\n      } else {\n        console.error('MetaMask não está instalado.');\n        return false;\n      }\n    });\n    return _checkMetaMaskInstalled.apply(this, arguments);\n  }\n  function connect() {\n    return _connect.apply(this, arguments);\n  }\n  function _connect() {\n    _connect = _asyncToGenerator(function* () {\n      try {\n        if (window.ethereum) {\n          yield window.ethereum.enable();\n          var provider = new ethers.BrowserProvider(window.ethereum, \"any\");\n          var signer = provider.getSigner();\n          var contract = new ethers.Contract(contractAddress, contractABI, provider);\n          var accounts = yield provider.listAccounts();\n          provider.on(\"network\", function (newNetwork, oldNetwork) {\n            if (oldNetwork) window.location.reload();\n          });\n          setIsConnected(true);\n          var ticketPriceBigInt = yield getTicketPrice();\n          var formattedTicketPrice = ethers.formatUnits(ticketPriceBigInt, 'ether');\n          setTicketPrice(formattedTicketPrice);\n          var connectedAccount = (yield signer).getAddress();\n          var owner = yield contract.organizer();\n          if ((yield connectedAccount).toString() == owner) {\n            setIsOwner(true);\n          } else {\n            setIsOwner(false);\n          }\n        } else {\n          console.error('MetaMask não está instalado.');\n          setIsConnected(false);\n        }\n      } catch (error) {\n        console.error('Erro ao acessar contas do MetaMask:', error.message);\n        setIsConnected(false);\n      }\n    });\n    return _connect.apply(this, arguments);\n  }\n  function getTicketPrice() {\n    return _getTicketPrice.apply(this, arguments);\n  }\n  function _getTicketPrice() {\n    _getTicketPrice = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n        var price = yield contract.ticketPrice();\n        return price;\n      } catch (error) {\n        alert('Erro ao consultar o preço do ingresso. Tente recarregar a página.');\n      }\n    });\n    return _getTicketPrice.apply(this, arguments);\n  }\n  function redeemTicket(_x) {\n    return _redeemTicket.apply(this, arguments);\n  }\n  function _redeemTicket() {\n    _redeemTicket = _asyncToGenerator(function* (ticketID) {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var tx = yield contract.redeemTicket({\n          from: signerAddress\n        }, ticketID);\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n        }\n      } catch (error) {\n        if (error.message.substr(0, 18) == \"execution reverted\") {\n          alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n        }\n      }\n    });\n    return _redeemTicket.apply(this, arguments);\n  }\n  function purchaseTicket() {\n    return _purchaseTicket.apply(this, arguments);\n  }\n  function _purchaseTicket() {\n    _purchaseTicket = _asyncToGenerator(function* () {\n      try {\n        var metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        var signer = yield metamaskProvider.getSigner();\n        var contract = new ethers.Contract(contractAddress, contractABI, signer);\n        var signerAddress = (yield signer).getAddress();\n        var _ticketPrice = contract.ticketPrice();\n        var tx = yield contract.purchaseTicket({\n          from: signerAddress,\n          value: _ticketPrice\n        });\n        var receipt = yield tx.wait();\n        if (receipt.status === 1) {\n          alert(\"Transação bem-sucedida: O ingresso foi adquirido com sucesso!\");\n        }\n      } catch (error) {\n        if (error.message.substr(0, 18) == \"insufficient funds\") {\n          alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n        }\n      }\n    });\n    return _purchaseTicket.apply(this, arguments);\n  }\n  useEffect(function () {\n    function checkMetaMask() {\n      return _checkMetaMask.apply(this, arguments);\n    }\n    function _checkMetaMask() {\n      _checkMetaMask = _asyncToGenerator(function* () {\n        try {\n          var installed = yield checkMetaMaskInstalled();\n          setIsMetaMaskInstalled(installed);\n        } catch (error) {\n          console.error('Erro ao verificar o MetaMask:', error.message);\n        }\n      });\n      return _checkMetaMask.apply(this, arguments);\n    }\n    checkMetaMask();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [isMetaMaskInstalled && !isConnected && _jsxs(View, {\n      style: styles.metaMaskView,\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Seja Bem-Vindo!\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Conecte-se para continuar.\"\n      }), _jsx(Button, {\n        onPress: connect,\n        title: \"Conectar\",\n        color: \"#8da8ff\"\n      })]\n    }), !isMetaMaskInstalled && _jsxs(View, {\n      style: styles.metaMaskView,\n      children: [_jsx(Text, {\n        style: styles.metaMaskText,\n        children: \":(\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Parece que voc\\xEA n\\xE3o possui a Metamask instalada...\"\n      }), _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"Instale para continuar!\"\n      })]\n    }), isConnected && _jsx(View, {\n      style: styles.metaMaskText,\n      children: _jsx(Text, {\n        style: styles.metaMaskText,\n        children: \"O que deseja fazer?\"\n      })\n    }), isConnected && !isOwner && _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Button, {\n        onPress: purchaseTicket,\n        title: \"Comprar Ingresso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: redeemTicket,\n        title: \"Resgatar Ingresso\",\n        color: \"#8da8ff\"\n      }), _jsx(View, {\n        style: styles.horizontalMargin\n      }), _jsx(Button, {\n        onPress: getTicketPrice,\n        title: \"Obter Reembolso\",\n        color: \"#8da8ff\"\n      })]\n    }), isConnected && _jsx(View, {\n      style: styles.metaMaskText,\n      children: _jsxs(Text, {\n        style: styles.metaMaskText,\n        children: [\"Pre\\xE7o do ingresso: \", ticketPrice !== null ? `${ticketPrice} ETH` : 'Carregando...']\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  metaMaskView: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#222',\n    borderRadius: 5\n  },\n  metaMaskText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  horizontalMargin: {\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","Button","ethers","jsx","_jsx","jsxs","_jsxs","ContractABI","require","contractABI","abi","App","_useState","_useState2","_slicedToArray","isMetaMaskInstalled","setIsMetaMaskInstalled","_useState3","_useState4","isConnected","setIsConnected","_useState5","_useState6","isOwner","setIsOwner","_useState7","_useState8","readTicketID","setReadTicketID","_useState9","_useState10","ticketPrice","setTicketPrice","contractAddress","checkMetaMaskInstalled","_checkMetaMaskInstalled","apply","arguments","_asyncToGenerator","window","ethereum","console","error","connect","_connect","enable","provider","BrowserProvider","signer","getSigner","contract","Contract","accounts","listAccounts","on","newNetwork","oldNetwork","location","reload","ticketPriceBigInt","getTicketPrice","formattedTicketPrice","formatUnits","connectedAccount","getAddress","owner","organizer","toString","message","_getTicketPrice","metamaskProvider","price","alert","redeemTicket","_x","_redeemTicket","ticketID","signerAddress","tx","from","receipt","wait","status","substr","purchaseTicket","_purchaseTicket","value","checkMetaMask","_checkMetaMask","installed","style","styles","container","children","metaMaskView","metaMaskText","onPress","title","color","row","horizontalMargin","create","flex","backgroundColor","alignItems","justifyContent","marginTop","padding","borderRadius","textAlign","fontWeight","flexDirection","marginVertical","marginHorizontal"],"sources":["/home/gabriel/SistDist/interface/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, Button } from 'react-native';\nimport { ethers } from 'ethers';\nconst ContractABI = require('../build/contracts/TicketToken.json');\nconst contractABI = ContractABI.abi;\n\nexport default function App() {\n\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isOwner, setIsOwner] = useState(false);\n  const [readTicketID, setReadTicketID] = useState(false);\n  const [ticketPrice, setTicketPrice] = useState(null); \n  \n  const contractAddress = \"0xeEfB74577aB224585e45e61333f3545D9233C30f\";//colocar o endereço do contrato obtido no deploy\n\n  async function checkMetaMaskInstalled() {\n\n    // Verifica se a extensão ethereum está presente no window\n    if (window.ethereum) {\n\n     return true;\n\n    } else {\n\n      console.error('MetaMask não está instalado.');\n      return false;\n\n    }\n\n  }\n\n  async function connect() {\n    try {\n      // Verifica se o MetaMask está presente\n      if (window.ethereum) {\n        await window.ethereum.enable(); // Solicita permissão ao usuário para conectar o MetaMask\n  \n        // Cria um Signer a partir do MetaMask\n        const provider = new ethers.BrowserProvider(window.ethereum, \"any\");\n        const signer = provider.getSigner();\n        \n        //cria uma instância do contrato\n        const contract = new ethers.Contract(contractAddress, contractABI, provider);\n\n        // Tenta obter as contas do MetaMask\n        const accounts = await provider.listAccounts();\n  \n        // Recarrega a aplicação no caso em que o usuário troca de rede \n        provider.on(\"network\", (newNetwork, oldNetwork) => {\n          if (oldNetwork) window.location.reload();\n        });\n  \n        setIsConnected(true);\n\n        const ticketPriceBigInt = await getTicketPrice();\n        const formattedTicketPrice = ethers.formatUnits(ticketPriceBigInt, 'ether');\n        setTicketPrice(formattedTicketPrice); \n\n        // Obtém o endereço da conta conectada\n        const connectedAccount = (await signer).getAddress();\n\n        // Obtém o endereço do owner do contrato\n        const owner = await contract.organizer();\n\n        // Verifica se a conta conectada é do organizador ou não\n        if((await connectedAccount).toString() == owner){\n          setIsOwner(true);\n        }else{\n          setIsOwner(false);\n        }\n\n      } else {\n        console.error('MetaMask não está instalado.');\n        setIsConnected(false);\n      }\n    } catch (error) {\n      // Se o MetaMask não estiver instalado ou se o usuário não der permissão, será lançado um erro\n      console.error('Erro ao acessar contas do MetaMask:', error.message);\n      setIsConnected(false);\n    }\n  }\n/*\n  async function purchaseLicense() {\n\n    try {\n      const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n      const signer = await metamaskProvider.getSigner();\n    \n      // Crie uma instância do contrato usando o Signer da MetaMask\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const signerAddress = (await signer).getAddress();\n    \n      const tx = await contract.purchaseLicense({from: signerAddress, value: licensePrice});\n      const receipt = await tx.wait();\n\n      if (receipt.status === 1) {\n        alert(\"Transação bem-sucedida: A licença foi adquirida com sucesso!\");\n      }\n    \n    } catch (error) {\n\n      if(error.message.substr(0, 18) ==  \"insufficient funds\"){\n\n        alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n\n      }else if(error.message.substr(0, 18) ==  \"execution reverted\"){\n\n        alert('Erro ao enviar a transação: Parece que você já possui a licença = )');\n\n      }\n      \n    }\n\n  }\n\n  async function printLicense() {\n\n    try {\n      const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n      const signer = await metamaskProvider.getSigner();\n      \n      // Crie uma instância do contrato usando o Signer da MetaMask\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n\n      // Chamar a função printSoftwareKey\n      const key = await contract.printSoftwareKey();\n\n      console.log(\"Chave de software:\", key);\n      alert(\"Chave de software: \" + key);\n    } catch (error) {\n\n      if(error.message.substr(0, 18) ==  \"insufficient funds\"){\n\n        alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n\n      }else if(error.message.substr(0, 18) ==  \"execution reverted\"){\n\n        alert('Erro ao enviar a transação: Você precisa ter comprado a licença antes = (');\n\n      }\n\n    }\n\n  }\n*/\n\nasync function getTicketPrice() {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    //const signer = await metamaskProvider.getSigner();\n    \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, metamaskProvider);\n\n    // Obtém o valor da variável pública \"ticketPrice\"\n    const price = await contract.ticketPrice();\n\n    return price;\n\n  } catch (error) {\n\n    alert('Erro ao consultar o preço do ingresso. Tente recarregar a página.');\n\n  }\n\n}\n\nasync function redeemTicket(ticketID) {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n  \n    const tx = await contract.redeemTicket({from: signerAddress}, ticketID);\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi resgatado com sucesso! Boa Festa!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.substr(0, 18) ==  \"execution reverted\"){\n\n      alert('Erro ao enviar a transação: Parece que você já resgatou esse ingresso = )');\n\n    }\n    \n  }\n\n}\n\nasync function purchaseTicket() {\n\n  try {\n    const metamaskProvider = new ethers.BrowserProvider(window.ethereum, \"any\");\n    const signer = await metamaskProvider.getSigner();\n  \n    // Crie uma instância do contrato usando o Signer da MetaMask\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    const signerAddress = (await signer).getAddress();\n\n    const ticketPrice = contract.ticketPrice();\n  \n    const tx = await contract.purchaseTicket({from: signerAddress, value: ticketPrice});\n    const receipt = await tx.wait();\n\n    if (receipt.status === 1) {\n      alert(\"Transação bem-sucedida: O ingresso foi adquirido com sucesso!\");\n    }\n  \n  } catch (error) {\n\n    if(error.message.substr(0, 18) ==  \"insufficient funds\"){\n\n      alert('Erro ao enviar a transação: Parece que você não tem fundos suficientes = (');\n\n    }\n    \n  }\n\n}\n  useEffect(() => {\n\n    async function checkMetaMask() {\n\n      try {\n\n        // Chamada da função que verifica o MetaMask\n        const installed = await checkMetaMaskInstalled();\n        \n        // Atualiza o estado com base no resultado da verificação\n        setIsMetaMaskInstalled(installed);\n\n      } catch (error) {\n\n        console.error('Erro ao verificar o MetaMask:', error.message);\n\n      }\n\n    }\n\n    // Chamada da função de verificação ao iniciar o componente\n    checkMetaMask();\n\n  }, []); // O array vazio [] assegura que o efeito só seja executado uma vez, sem depender de variáveis de estado\n\n\n  return (\n\n   <View style={styles.container}>\n\n      {isMetaMaskInstalled && !isConnected &&(\n        <View style={styles.metaMaskView}>\n          <Text style={styles.metaMaskText}>Seja Bem-Vindo!</Text>\n          <Text style={styles.metaMaskText}>Conecte-se para continuar.</Text>\n          <Button\n            onPress={connect}\n            title=\"Conectar\"\n            color=\"#8da8ff\"\n          />\n        </View>\n      )}\n \n      {!isMetaMaskInstalled && (\n        <View style={styles.metaMaskView}>\n          <Text style={styles.metaMaskText}>:(</Text>\n          <Text style={styles.metaMaskText}>Parece que você não possui a Metamask instalada...</Text>\n          <Text style={styles.metaMaskText}>Instale para continuar!</Text>\n        </View>\n      )}\n\n      {isConnected &&(\n        <View style={styles.metaMaskText}>\n          <Text style={styles.metaMaskText}>O que deseja fazer?</Text>\n        </View>\n      )}\n\n      {isConnected && !isOwner &&(\n        <View style={styles.row}>\n          <Button\n            onPress={purchaseTicket}\n            title=\"Comprar Ingresso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={redeemTicket}\n            title=\"Resgatar Ingresso\"\n            color=\"#8da8ff\"\n          />\n          <View style={styles.horizontalMargin} />\n          <Button\n            onPress={getTicketPrice}\n            title=\"Obter Reembolso\"\n            color=\"#8da8ff\"\n          />\n        </View>\n      )}\n\n      {isConnected &&(\n        <View style={styles.metaMaskText}>\n          <Text style={styles.metaMaskText}>Preço do ingresso: {ticketPrice !== null ? `${ticketPrice} ETH` : 'Carregando...'}</Text>\n        </View>\n      )}\n\n    </View>\n  );\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  metaMaskView: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#222',\n    borderRadius: 5,\n  },\n  metaMaskText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    marginVertical: 10,\n  },\n  horizontalMargin: {\n    marginHorizontal: 10,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}